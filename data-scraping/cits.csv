Unit Name,Unit Code,Exam,Semesters,URL,Unit Coordinator,Contact Hours,Prerequisites,Description
Advanced Algorithms,CITS3001,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS3001,Dr Andrew Gozzard,"[('lectures', '3 hours per week'), ('labs', '2 hours per week')]",CITS2200+CITS2211,"This unit reinforces key concepts from CITS2200 Data Structures and Algorithms then builds and expands on them. The design and analysis of algorithms is covered. Students learn algorithmic problem-solving techniques through exposure to well-known algorithms. Topics including sorting algorithms, graph algorithms, dynamic programming, string algorithms, greedy algorithms, NP vs P, and problem-motivated design and analysis of novel algorithms."
Agile Web Development,CITS3403,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS3403,Dr Matthew Daggitt,"[('Lectures', '2-hours per week'), ('Laboratories', '2-hours per week')]",CITS1401,"This unit explores technologies, programming languages and environments that underpin the development of modern web applications. It builds on students' previous programming and data management experience to develop and demonstrate technologies in action. Topics and techniques evolve from year to year to stay at the technological front-end of the rapidly changing web and internet fields. Examples include historical milestones of the internet and web; client/server models; internet protocols; document standards; development environments; client-side, server-side programming; n-tiered application architectures; database access and abstraction; and open-source tools."
Artificial Intelligence and Adaptive Systems,CITS4404,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS4404,Associate Professor Cara MacNish,[],CITS2002|CITS2005|CITS2402,"Building software modules that can learn from, and adapt to, a changing and unknown environment is a key challenge faced in many complex real-world problems. This unit covers a class of nature-inspired algorithms and structures for creating programs that demonstrate emergent adaptive and intelligent behaviours, including evolutionary algorithms, neural networks, machine learning and a swarm intelligence, contrasted against traditional optimisation techniques. The representations and algorithms explored in the unit can be used to solve problems ranging from complex optimisation to adaptive learning, which form the core research areas of artificial intelligence. Numerous research questions remain when such techniques are applied in real-world situations. In this interactive, project-based unit, students are given opportunities to explore the above-mentioned advanced topics in artificial intelligence and adaptive systems, research into a topic or technique of interest and develop and apply software solutions in simulated environments."
Computational Thinking with Python,CITS1401,Yes,"Semester 1, Semester 2",https://handbooks.uwa.edu.au/unitdetails?code=CITS1401,Dr Ghulam Mubashar Hassan   (Sem 1)  and  Dr Naeha  Sharif   (Sem 2),"[('Lectures', '2-hours per week'), ('Labs', '2-hours per week'), ('WorkshopS', '1-hour per week')]",,"Computers are everywhere and in nearly everything - the watch you wear, the phone you use, the car you drive, the games you play and, increasingly, in your home. CITS140 I is the first step along your path to being able to use computers to solve problems. Because computers cannot yet work using human languages, computer languages have been devised to allow algorithms encoding solutions to problems to be executed on computers. In this unit you will learn about, and use, the very popular language Python 3. Along the way you will also learn some problem solving techniques and how to create algorithms; you will also learn how computers execute your programs"
Computer Analysis and Visualisation,CITS2401,Yes,"Semester 1, Semester 2",https://handbooks.uwa.edu.au/unitdetails?code=CITS2401,Dr Anwarul Patwary,"[('lectures', '2 hours per week'), ('labs', '3 hours per week'), ('workshop', '1 hour per week')]",,"In this unit, students develop an understanding of scientific computing and modelling, analysis, problem solving and visualisation.  They understand the approach of computational modelling; will develop strong programming skills in data analysis modelling; understand limitations and uncertainty in models; devise and implement computational models; analyse data and hypotheses; are aware of reliability and correctness; and are able to perform simulation and testing."
Computer Networks,CITS3002,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS3002,Dr Jin Hong,"[('lectures', '2 hours per week'), ('labs', '2 hours per week')]",CITS2002,"This unit introduces students to the design and implementation of contemporary wired and wireless computer networks, the systems- and application-level software necessary to support their efficient operation, and the security and privacy factors introduced by networks and their applications."
Computer Science WIL Internship,CITS3009,No,"Semester 1, Semester 2",https://handbooks.uwa.edu.au/unitdetails?code=CITS3009,Dr Debora Correa,"[('Industry experience', '100 hours'), ('Online sessions with Unit Coordinator', '1- 2 hours fortnightly')]",,"This unit allows Computer Science students to gain credit for supervised projects in working situations in the public and private sectors. It supports students to apply, enhance, and develop generic and/or specific skills gained through their Computer Science studies in an industry context. It offers students access to professional responsibilities, participation in group and/or independent problem-solving scenarios, and exposure to workplace practices and communication (written and oral). It also supports students to articulate their skills and experience for employment contexts. Please visit the WIL Placements and Internships page for more information about the WIL program. This unit is not available for self-enrolment. Students should first confirm their course can accommodate a WIL unit, that they have space in the teaching period, and that they meet the unit prerequisites. Students must submit an expression of interest by the published deadline in SoniaOnline , 8-12 weeks before the desired teaching period. In SoniaOnline students are guided through the process of securing an internship/placement, which is a component of the unit. Due to the competitive nature of securing a placement, enrolment in a WIL unit is not guaranteed. Enrolments in WIL units are subject to approval by the University. A student who withdraws from a WIL placement after confirmation of placement with the host organisation will be declared to have failed the unit unless the School is satisfied that there were exceptional circumstances to justify withdrawal. Who can apply for this unit? Undergraduate students who have completed 96 credit points and are enrolled in the BH008 Bachelor of Advanced Computer Science program OR MJD-CMPSC Computer Science major with CITS3009 in its unit sequence, can apply to take the WIL Internship Program. Undergraduate students who don't meet these requirements may email the unit coordinator with their reasons for wanting to apply for the program, and the unit coordinator may grant permission to apply. Please note that students would still need to complete the competitive application and selection process, and that permission from the unit coordinator does not guarantee a placement and subsequent enrolment in the unit."
Data Structures and Algorithms,CITS2200,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS2200,Professor Amitava Datta,"[('lectures', '26 hours'), ('practical classes', '11 hours'), ('labs', '24 hours)')]",CITS1401,"At the core of most computer applications is the storage and retrieval of information. The way that the stored data is structured has a strong impact on what can be retrieved, how quickly it can be retrieved and how much space it occupies. The use of generic structures, or abstract data types (ADTs), to encapsulate the data also facilitates software engineering principles of independent modification, extension and re-use. This unit studies the specification, implementation and time-and-space performance of a range of commonly used ADTs and corresponding algorithms in an object-oriented setting."
Defensive Cybersecurity,CITS2006,No,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS2006,Dr Jin Hong,[],CITS1003+CITS1401,"This unit introduces students to the principles and practices of defensive cybersecurity, which aims to protect networks and systems from cyberattacks. Students will learn how to identify and analyse threats and vulnerabilities, how to design and implement mitigation strategies and countermeasures, and evaluate and compare their effectiveness in different application contexts. Students will also gain hands-on experience with various tools and techniques for anomaly detection, intrusion prevention, forensic analysis, and system hardening."
Discrete Structures,CITS2211,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS2211,Dr Matthew Daggitt,"[('Lectorials', '2-hours per week')]",CITS1401,"This unit contains an overview of the mathematical foundations of computer science including basic set theory and logic, formal proof methodologies, and automata theory. The unit applies this knowledge to real problems in computer science and software engineering, specifically the demonstration of program correctness and the specification of computer systems. Topics include set theory, relations, functions, predicate logic, formal proofs of correctness, finite state automata and automata theory."
Graphics and Animation,CITS3003,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS3003,Dr Naeha Sharif,"[('lectures', '2 hours per week'), ('labs', '2 hours per week')]",CITS1401|CITS2002|CITS2401,"This unit teaches the fundamentals of computer-generated three-dimensional graphics and animation for applications, including creating interactive virtual environments. The unit introduces the virtual image formation process using a synthetic camera model. The OpenGL API is introduced for writing interactive graphics programs. Fundamental techniques are emphasised, such as using the homogeneous coordinate system for affine transformations. The unit then covers lighting and shading models, as well as the use of GLSL programmable shaders. Finally, three-dimensional animation techniques are covered, with an emphasis on realistic modelling of articulated bodies. The practical component of the unit involves developing a realistic three-dimensional image application involving animation using the core concepts covered in the unit."
High Performance Computing,CITS3402,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS3402,Dr Marcell Szikszai,[],CITS2002,"High performance computing is an integral part of modern scientific and engineering research. Most physical systems are explored through simulation and modelling using high performance computing tools like parallel computers. This unit introduces students to the essential tools and techniques of high performance computing. The main objectives are to introduce students to different frameworks of parallel and distributed computing that they can use in their specific areas of interest. The students learn to program multi core processors using OpenMP, and clusters of personal computers using MPI. Students examine high performance computing case studies from different scientific disciplines and also work on individual or group projects to consolidate their learning. MapReduce is a programming paradigm for processing large data sets on clusters of computers. The implementation of MapReduce through Spark and the distributed file system HDFS has become a widely used programming model for high performance computing in the last decade. This unit will also introduce students to this programming model through lectures and laboratory exercises."
Intelligent Agents,CITS3011,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS3011,Dr Daochang Liu,"[('lectures', '2 hours per week'), ('labs', '3 hours per week')]",CITS2200,"In the broad context of Artificial Intelligence a key feature of intelligent beings is their abilities for perceiving their surrounds and making rational decisions on how to act, for example, deciding on the next move on a board game. This unit extends the classical problem-solving focus of algorithmic design to autonomous decision making, through introducing the key fundamental concepts and principles of intelligent autonomous agents. We introduce ideas such as decision making, goal-directed behaviour, heuristic search, action selection, environment with uncertainties, performance (self-evaluation), expected return and learning. These concepts are explored and reinforced through practical designs and implementations of intelligent agents situated in environments such as game playing."
Introduction to Programming with Python,CITS1501,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS1501,Dr Jake Kendrick,"[('Lectures', '2 hours per week for 12 weeks'), ('Labs', '2 hours per week for 10 weeks from week 1.')]",,"This unit introduces computational thinking, data analysis, and visualisation for students from any discipline.  This stand-alone unit will use datasets and problems from different disciplines to engage students. They will learn practical problem-solving, data analysis, and visualisation skills using the Python programming language and its libraries."
Knowledge Representation,CITS3005,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS3005,Associate Professor Tim French,"[('Lectures', '2-hours per week'), ('Laboratories', '2-hours per week')]",CITS2200+CITS2211,"Knowledge Representation will cover tools and methodologies for the formal representation of knowledge in a machine readable format, and automated reasoning technologies. These technologies are important for capturing domain specific details and supporting and automating decision making processes. The course will cover: logical foundations of artificial intelligence, including first order, probabilistic and fuzzy logics; formal representation of knowledge domains, including description logics, ontologies and graphical models; reasoning techniques including logic programming and theorem proving; and applications to planning domains."
Object Oriented Programming,CITS2005,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS2005,Dr Andrew Gozzard,"[('Lectures', '2 hours per week'), ('workshops', '2 hours per week')]",CITS1401|CITS2401,"This unit introduces the language and techniques needed to write well-structured programs using the object-oriented paradigm with the Java programming language.  The focus of this unit is developing appropriate classes and methods to solve real-world problems. The unit also covers advanced topics including generics, the Java Platform, concurrency and exceptions. Appropriate software engineering principles and concepts are also discussed in the context of object-oriented design in Java."
Secure Coding,CITS3007,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS3007,Mr Arran Stewart,"[('lectures', '2 hours per week'), ('laboratories', '2 hours per week.')]",CITS2200|CITS2002|CITS2005|CITS2402,This unit covers different types of security vulnerabilities of computer systems and how to prevent and mitigate the effects of them.  Topics include: (1) memory and Arithmetic Errors; (2) validated input and inter-process communication; (3) race conditions and file operations; (4) cryptographic practises; and (5) development practices.
Systems Programming,CITS2002,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS2002,Dr Chris McDonald,"[('Lectures', '3-hours per week'), ('Laboratories', '2-hours per week')]",CITS1401|CITS2401,"Understanding the relationship between a programming language and the contemporary operating systems on which it executes is central to developing many skills in Computer Science. This unit introduces the standard C programming language, on which many other programming languages and systems are based, through a study of core operating system services including input and output, memory management and file systems. The C language is introduced through discussions on basic topics like data types, variables, expressions, control structures, scoping rules, functions and parameter passing. More advanced topics like C's run-time environment, system calls, dynamic memory allocation, pointers and recursion are presented in the context of operating system services related to process execution, memory management and file systems. The importance of process scheduling, memory management and interprocess communication in modern operating systems is discussed in the context of operating system support for multiprogramming. Laboratory and practical class work place a strong focus on the practical application of fundamental programming concepts, with examples designed to compare and contrast many key features of contemporary operating systems."
Data Warehousing,CITS3401,Yes,Semester 1,https://handbooks.uwa.edu.au/unitdetails?code=CITS3401,Dr Siwen Luo,"[('lectures', '2 hours per week'), ('labs', '2 hours per week')]",CITS1402+CITS1401,"Relational databases are the backbones of modern businesses in processing transactions and storing customer data. Most organisations usually deploy several relational databases for operational convenience. It is quite often necessary to integrate the information existing in different relational databases for planning and decision making. Data warehouses are built to facilitate planning and decision making in businesses integrating data from different relational databases. Online analytical processing (OLAP) is a technology that uses a data warehouse for answering aggregation queries often used in planning. While relational databases hold important transactional information of a business, the success of a business quite often depends on advanced planning and development of strategies based on customer behaviour. Data mining technologies are used for discovering such patterns and trends in data stored in relational databases. This unit introduces the key mechanisms in data warehousing and OLAP. It discusses logical and physical design of data warehouses including star schema, snowflake schema, data marts, partitioning and materialised views. Students study the use of data warehouses through a study of the OLAP technology including the multidimensional OLAP (MOLAP) and relational OLAP (ROLAP) architectures, OLAP operations and structured query language (SQL) support for OLAP."
Introduction to Data Science,CITS2402,Yes,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS2402,Dr Debora Correa,"[('lectures', '2 x 1 hour per week'), ('laboratory', '1 x 2 hours per week.')]",CITS1401|CITS2401,"Data is ubiquitous in modern society. It is used to monitor the economy, inform business decisions, understand how the environment is changing, and communicate public health messages. Data science is a booming field that harnesses raw data and turns it into actionable knowledge. Data Scientists develop and employ tools to collect, understand and communicate data and its meaning. They are able to identify trends, understand demographics and  inform interventions. They are able to work across disciplines, from science to business, health, media and politics. But data can also be misused, and a professional Data Scientist will understand the ethical demands of responsible use of data. This hands-on unit provides practical experience, using the programming language Python, for solving real-world data science problems, from acquiring data from public sources, to understanding the data through analysis and modelling, to visualising and presenting the results."
Relational Database Management Systems,CITS1402,Yes,"Semester 1, Semester 2",https://handbooks.uwa.edu.au/unitdetails?code=CITS1402,Dr Mehwish Nasim,"[('lectures', '2 hours per week'), ('labs', '2 hours per week')]",,"This unit deals with data modelling through the theory and practice of database design, implementation and use. Several database models are addressed, with a strong focus on the relational model and its theoretical grounding in sets and relational algebra. The process of problem decomposition into entity-relations, the design of appropriate relational schemas, and their refinement through normalisation underlies the unit. Critical issues surrounding the design of query languages and their implementation are addressed, and information retrieval is practised using a specific query language. Students learn database connectivity by building systems in one of several programming languages that support a connectivity Application Programming Interface (API)."
Introduction to Cybersecurity,CITS1003,Yes,"Semester 1, Semester 2",https://handbooks.uwa.edu.au/unitdetails?code=CITS1003,"Dr Zhi Zhang   (Semester 1), Dr Garrison Gao (Semester 2)","[('Lectures', '2-hours per week'), ('Workshop/Practicals', '2-hours per week')]",,"This unit introduces students to the fundamental concepts of cybersecurity. Starting with an understanding that cybersecurity aims to protect information systems (hardware, software and associated infrastructure), the data on them, and the services they provide, from unauthorised access, harm or misuse. As a fundamental part of this, information security is the preservation of confidentiality, integrity and availability of information. The unit will cover areas as defined in the Cyber Security Book of Knowledge (CyBoK) as recommended by the Australian Computer Society (ACS).  These areas include: (1) Human, Organisational and Human, Organisational and Regulatory Aspects; (2) Attacks and Defences; (3) Security; (4) Software Platform Security; and (5) Infrastructure Security."
Penetration Testing,CITS3006,No,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS3006,Dr Jin Hong,"[('lectures', '2 hours per week'), ('laboratories', '2 hours per week.')]",CITS2002+CITS2006|CITS2005+CITS2006,"Students learn how to conduct basic computer system vulnerability analysis and penetration testing looking from an attacker's perspectives to find and exploit vulnerabilities, as well as looking from the defender's perspectives to patch vulnerabilities and conduct forensics to mitigate attacks."
Professional Computing,CITS3200,No,Semester 2,https://handbooks.uwa.edu.au/unitdetails?code=CITS3200,Associate Professor Michael Wise,"[('lectures', '10-hours'), ('project mentor sessions', '4-hours'), ('project', '60-hours)')]",CITS2002|CITS2200|CITS2402,"Unlike other computing units you will have taken, which are about different aspects of computer or data science, CITS3200 Professional Computing is deliberately outward facing - to your future role in industry. For example, the unit teaches an appreciation of the ethical and social implications of computing projects, and aspects of project management, in the context of a large-scale computing projects. The bulk of the unit is then taken up with a large group project involving five or six students per group. The project will give you the opportunity to practice various project management techniques and communication skills, and to try different roles in a computing project team."
